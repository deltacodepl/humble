{{- if .Values.dendrite.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ .Values.argocd.project }}-dendrite
  namespace: {{ .Values.argocd.namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "5"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: {{ .Values.argocd.project }}
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
  destination:
    name: in-cluster
    namespace: {{ .Values.argocd.project }}
  source:
    path: charts/dendrite
    repoURL: https://github.com/locmai/charts
    targetRevision: main
    helm:
      releaseName: dendrite
      values: |
        # Use a polylith setup, which creates a deployment for every component.
        # If false, a monolithic deployment will be created, with a single deployment.
        polylith: false
        # Docker image to use
        image:
          name: "matrixdotorg/dendrite-monolith:latest"
          pullPolicy: IfNotPresent
        extraArgs:
        - --really-enable-open-registration 
        configuration:
          # servername for this dendrite deployment
          version: 2
          servername: "dendrite.{{ .Values.global.domain }}"
          # database connection settings
          database:
            host:  "dendrite-postgresql.apps.svc.cluster.local:5432"
            user:  "dendrite"
            password: "dendrite"
            max_open_conns: 100
            max_idle_conns: 2
            conn_max_lifetime: -1
          # prometheus metrics
          metrics:
            # Whether or not Prometheus metrics are enabled.
            enabled: true
          # NATS connection settings
          jetstream:
            in_memory: false
            addresses:
              - nats://dendrite-nats.apps.svc.cluster.local:4222
        persistence:
          storageClass: "longhorn"
          logs:
            existingClaim: ""
            capacity: "10Gi"
          media:
            existingClaim: ""
            capacity: "10Gi"
        nats:
          enabled: true
          nats:
            jetstream:
              enabled: true
          reloader:
            enabled: false
            image: natsio/nats-server-config-reloader:0.7.0
        postgresql:
          enabled: true
          global:
            postgresql:
              postgresqlDatabase: "dendrite"
              postgresqlUsername: "dendrite"
              postgresqlPassword: "dendrite"
          persistence:
            enabled: true
            storageClass: "longhorn"
            accessModes:
              - ReadWriteOnce
            size: 10Gi
        ingress:
          enabled: true
          
          className: nginx
          annotations:
            cert-manager.io/cluster-issuer: letsencrypt-prod
            external-dns.alpha.kubernetes.io/target: "{{ .Values.global.env }}-humble-tunnel.{{ .Values.global.domain }}"
            external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
            nginx.ingress.kubernetes.io/proxy-body-size: 32m
          hosts:
            - host: &host dendrite.{{ .Values.global.domain }}
              paths:
                - path: /
                  pathType: Prefix
          tls:
            - secretName: dendrite-tls-certificate
              hosts:
                - *host
{{- end }}
