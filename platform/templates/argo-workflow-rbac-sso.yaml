# RBAC for Argo Workflow SSO configuration
{{- if .Values.argo_workflow.enabled }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: user-default-login
  namespace: {{ .Values.argo_workflow.namespace }}
  annotations:
    workflows.argoproj.io/rbac-rule: "true"
    workflows.argoproj.io/rbac-rule-precedence: "0"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: admin-user
  namespace: {{ .Values.argo_workflow.namespace }}
  annotations:
    workflows.argoproj.io/rbac-rule: "'admin' in groups"
    workflows.argoproj.io/rbac-rule-precedence: "1"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: engineer-user
  namespace: {{ .Values.argo_workflow.namespace }}
  annotations:
    workflows.argoproj.io/rbac-rule: "'engineer' in groups"
    workflows.argoproj.io/rbac-rule-precedence: "1"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: engineer-cluster-role
rules:
  - apiGroups:
      - argoproj.io
    resources:
      - workflows
      - cronworkflows
      - workflowtemplates
      - clusterworkflowtemplates
      - workflowtasksets
      - workflowtaskresults
      - workfloweventbindings
      - eventbus
      - eventsources
      - sensors
    verbs:
      - "*"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admin-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: engineer-cluster-role
subjects:
  - kind: ServiceAccount
    name: admin-user
    namespace: {{ .Values.argo_workflow.namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: engineer-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: engineer-cluster-role
subjects:
  - kind: ServiceAccount
    name: engineer-user
    namespace: {{ .Values.argo_workflow.namespace }}
{{- end }}
