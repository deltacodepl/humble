{{- if .Values.bootstrap.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: bootstrap
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "0"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: bootstrap
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
    syncOptions:
      - CreateNamespace=true
  ignoreDifferences:
    - group: argoproj.io
      kind: Application
      jsonPointers:
        - /spec/syncPolicy/automated
  destination:
    name: in-cluster
    namespace: argocd
  source:
    path: 'bootstrap/argocd'
    repoURL: {{ .Values.global.repoURL }}
    targetRevision: "{{ .Values.bootstrap.targetRevision }}"
    helm:
      releaseName: bootstrap-argocd
      valueFiles:
      - values-{{ .Values.global.env }}.yaml
      values: |
        global:
          domain: {{ .Values.global.domain }}
          repoURL: {{ .Values.global.repoURL }}
          env: [] 

        argo-cd:
          server:
            ingress:
              enabled: true
              ingressClassName: nginx
              annotations:
                cert-manager.io/cluster-issuer: letsencrypt-prod
                external-dns.alpha.kubernetes.io/target: "{{ .Values.global.env }}-humble-tunnel.{{ .Values.global.domain }}"
                external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
              hosts:
                - &host argocd.{{ .Values.global.domain }}
              tls:
                - secretName: argocd-tls-certificate
                  hosts:
                    - *host
            metrics:
              enabled: true
              serviceMonitor:
                enabled: true
            config:
              resource.customizations: |
                argoproj.io/Application:
                  health.lua: |
                    hs = {}
                    hs.status = "Progressing"
                    hs.message = ""
                    if obj.status ~= nil then
                      if obj.status.health ~= nil then
                        hs.status = obj.status.health.status
                        if obj.status.health.message ~= nil then
                          hs.message = obj.status.health.message
                        end
                      end
                    end
                    return hs
          controller:
            metrics:
              enabled: true
              serviceMonitor:
                enabled: true

          repoServer:
            metrics:
              enabled: true
              serviceMonitor:
                enabled: true
          
          redis:
            metrics:
              enabled: true
              serviceMonitor:
                enabled: true
          
          dex:
            metrics:
              enabled: true
              serviceMonitor:
                enabled: true
{{- end }}
