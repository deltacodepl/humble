argo-cd:
  server:
    extraArgs:
      - --insecure
    config:
      statusbadge.enabled: 'true'
      resource.customizations.health.argoproj.io_Application: |
        hs = {}
        hs.status = "Progressing"
        hs.message = ""
        if obj.status ~= nil then
          if obj.status.health ~= nil then
            hs.status = obj.status.health.status
            if obj.status.health.message ~= nil then
              hs.message = obj.status.health.message
            end
          end
        end
        return hs
      resource.customizations.ignoreDifferences.admissionregistration.k8s.io_MutatingWebhookConfiguration: |
        jqPathExpressions:
        - '.webhooks[]?.clientConfig.caBundle'
      resource.customizations.ignoreDifferences.admissionregistration.k8s.io_ValidatingWebhookConfiguration: |
        jqPathExpressions:
        - '.webhooks[]?.failurePolicy'
      
      configManagementPlugins: |
        - name: argocd-vault-plugin
          init:
            command:
              - 'sh'
              - '-c'
              - |
                if test -e Chart.yaml; then 
                  helm dependency build
                fi
          generate:
            command:
              - 'sh'
              - '-c'
              - |
                BASENAME=`basename $PWD`
                if test -e Chart.yaml; then 
                  helm template --include-crds $BASENAME --namespace $BASENAME . | argocd-vault-plugin generate -
                elif test -e kustomization.yaml; then 
                  kustomize build . | argocd-vault-plugin generate -
                else 
                  argocd-vault-plugin generate ./
                fi
    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        external-dns.alpha.kubernetes.io/target: "prod-humble-tunnel.maibaloc.com"
        external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
      hosts:
        - &host argocd.maibaloc.com
      tls:
        - secretName: argocd-tls-certificate
          hosts:
            - *host
  repoServer:
    volumes:
      - name: custom-tools
        emptyDir: {}
    initContainers:
    - name: download-tools
      image: alpine:3.15
      command: [sh, -c]

      # Don't forget to update this to whatever the stable release version is
      # Note the lack of the `v` prefix unlike the git tag
      env:
        - name: AVP_VERSION
          value: "1.7.0"
      args:
        - >-
          wget -O argocd-vault-plugin
          https://github.com/argoproj-labs/argocd-vault-plugin/releases/download/v${AVP_VERSION}/argocd-vault-plugin_${AVP_VERSION}_linux_amd64 &&
          chmod +x argocd-vault-plugin &&
          mv argocd-vault-plugin /custom-tools/
      volumeMounts:
        - mountPath: /custom-tools
          name: custom-tools  
    
    volumeMounts:
        - name: custom-tools
          mountPath: /usr/local/bin/argocd-vault-plugin
          subPath: argocd-vault-plugin

  applicationSet:
    enabled: false

  notifications:
    enabled: false
  
  redis-ha:
    enabled: true
