{{- if .Values.authentik.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ .Values.argocd.project }}-authentik
  namespace: {{ .Values.argocd.namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "2"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: {{ .Values.argocd.project }}
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
    syncOptions:
      - CreateNamespace=true
  destination:
    name: in-cluster
    namespace: {{ .Values.authentik.namespace }}
  source:
    chart: authentik
    repoURL: https://charts.goauthentik.io
    targetRevision: 4.0.3
    helm:
      releaseName: authentik
      values: |
        authentik:
          secret_key: "PleaseGenerateA50CharKey"
          # This sends anonymous usage-data, stack traces on errors and
          # performance data to sentry.beryju.org, and is fully opt-in
          error_reporting:
          enabled: true
          postgresql:
            password: "ThisIsNotASecurePassword"
        image:
            tag: "2021.12.4"
        envValueFrom:
          AK_ADMIN_PASS:
            secretKeyRef:
              key: ak_admin_password
              name: authentik-aka-secret
          AK_ADMIN_TOKEN:
            secretKeyRef:
              key: ak_admin_token
              name: authentik-aka-secret
        ingress:
          enabled: true
          annotations:
            hajimari.io/enable: "true"
            hajimari.io/appName: "Authentik"
            cert-manager.io/cluster-issuer: "letsencrypt-prod"
            external-dns.alpha.kubernetes.io/target: "humble-tunnel.{{ .Values.global.domain }}"
            external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
          hosts:
            - host: &host "authentik.{{ .Values.global.domain }}"
              paths:
                - path: "/"
                  pathType: Prefix
          tls:
            - hosts:
              - *host
        prometheus:
          serviceMonitor:
            create: true

        postgresql:
         enabled: true
         postgresqlPassword: "ThisIsNotASecurePassword"
        redis:
          enabled: true
{{- end }}
