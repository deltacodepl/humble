{{- if .Values.monitoring.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ .Values.argocd.project }}-monitoring
  namespace: {{ .Values.argocd.namespace }}
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: {{ .Values.argocd.project }}
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
    syncOptions:
      - CreateNamespace=true
  destination:
    name: in-cluster
    namespace: {{ .Values.monitoring.namespace }}
  source:
    chart: kube-prometheus-stack
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 13.7.2
    helm:
      releaseName: monitoring
      values: |
        prometheus:
          prometheusSpec:
            serviceMonitorSelectorNilUsesHelmValues: false
            serviceMonitorNamespaceSelector: {}

        grafana:
          sidecar:
            image:
              repository: omegavveapon/kopf-k8s-sidecar
              tag: 1.3.4
          dashboardProviders:
            dashboardproviders.yaml:
              apiVersion: 1
              providers:
                - name: 'hostmetrics'
                  orgId: 1
                  folder: 'Host Metrics'
                  type: file
                  disableDeletion: true
                  allowUiUpdates: false
                  editable: false
                  options:
                    path: /var/lib/grafana/dashboards/hostmetrics
          dashboards:
            enabled: true
            label: grafana_dashboard
            folder: /tmp/dashboards
            searchNamespace: grafana-dashboards
            provider:
              foldersFromFilesStructure: true
            annotations:
              k8s-sidecar-target-directory: "/tmp/dashboards/kubernetes"
          additionalDataSources:
            - name: Graphite
              type: graphite
              url: http://graphite:8080

              persistence:
                type: pvc
                enabled: true
                storageClassName: longhorn-default
                accessModes:
                  - ReadWriteOnce
                size: 1Gi
                finalizers:
                  - kubernetes.io/pvc-protection
                inMemory:
                  enabled: true
                  sizeLimit: 300Mi
{{- end }}