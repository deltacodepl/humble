{{- if .Values.tracing.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ .Values.argocd.project }}-jaeger
  namespace: {{ .Values.argocd.namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: {{ .Values.argocd.project }}
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
    syncOptions:
      - CreateNamespace=true
  destination:
    name: in-cluster
    namespace: {{ .Values.tracing.namespace }}
  source:
    chart: jaeger
    repoURL: https://jaegertracing.github.io/helm-charts
    targetRevision: 0.51.5
    helm:
      releaseName: jaeger
      values: |
        provisionDataStore:
          cassandra: false
          elasticsearch: true
          kafka: false
        elasticsearch:
          persistence:
            enabled: false
          volumeClaimTemplate:
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 10Gi
            storageClassName: "longhorn"
        storage:
          type: elasticsearch
        ingress:
          enabled: false
          # For Kubernetes >= 1.18 you should specify the ingress-controller via the field ingressClassName
          # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress
          # ingressClassName: nginx
          annotations: {}
          # Used to create an Ingress record.
          # The 'hosts' variable accepts two formats:
          # hosts:
          #   - chart-example.local
          # or:
          # hosts:
          #   - host: chart-example.local
          #     servicePort: grpc
          # annotations:
            # kubernetes.io/ingress.class: nginx
            # kubernetes.io/tls-acme: "true"
          # tls:
            # Secrets must be manually created in the namespace.
            # - secretName: chart-example-tls
            #   hosts:
            #     - chart-example.local

        agent:
          serviceMonitor:
            enabled: true
            additionalLabels:
              release: monitoring

        collector:
          serviceMonitor:
            enabled: true
            additionalLabels:
              release: monitoring

        query:
          serviceMonitor:
            enabled: true
            additionalLabels:
              release: monitoring
{{- end }}
