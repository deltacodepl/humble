argo-cd:
  server:
    extraArgs:
      - --insecure
    config:
      statusbadge.enabled: 'true'
      resource.customizations.health.argoproj.io_Application: |
        hs = {}
        hs.status = "Progressing"
        hs.message = ""
        if obj.status ~= nil then
          if obj.status.health ~= nil then
            hs.status = obj.status.health.status
            if obj.status.health.message ~= nil then
              hs.message = obj.status.health.message
            end
          end
        end
        return hs
      resource.customizations.health.argoproj.io_ApplicationSet: |
        hs = {}
        if obj.status ~= nil then
          if obj.status.conditions ~= nil then
            for i, condition in pairs(obj.status.conditions) do
              if condition.type == "ErrorOccurred" and condition.status == "True" then
                hs.status = "Degraded"
                hs.message = condition.message
                return hs
              end
              if condition.type == "ResourcesUpToDate" and condition.status == "True" then
                hs.status = "Healthy"
                hs.message = condition.message
                return hs
              end
            end
          end
        end
        hs.status = "Progressing"
        hs.message = ""
        return hs
      resource.customizations.ignoreDifferences.admissionregistration.k8s.io_MutatingWebhookConfiguration: |
        jqPathExpressions:
        - '.webhooks[]?.clientConfig.caBundle'
      resource.customizations.ignoreDifferences.admissionregistration.k8s.io_ValidatingWebhookConfiguration: |
        jqPathExpressions:
        - '.webhooks[]?.failurePolicy'

    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
      hosts:
        - &host argocd.maibaloc.com
      tls:
        - secretName: argocd-tls-certificate
          hosts:
            - *host
